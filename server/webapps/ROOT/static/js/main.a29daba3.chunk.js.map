{"version":3,"sources":["assets/images/menu/about-icon.svg","assets/images/menu/api-docs-icon.svg","assets/images/menu/logout-icon.svg","app/navigationConfig.js","assets/images/menu/resources-icon.svg","assets/images/menu/resourceManager-icon.svg","app/NavMenuItem.jsx","assets/images/metamug-console-logo.png","app/NavigationBar.jsx","constants/resource.js","api/apis.js","features/resources/DeleteAlertModal.jsx","components/ErrorModal.jsx","providers/ErrorModalContext.jsx","components/LoadingModal.jsx","providers/LoadingContext.jsx","utils/date.js","utils/queryParams.js","features/resources/ResourceTable.jsx","features/resources/Resources.jsx","elements/CustomList.jsx","providers/ResourceContext.jsx","components/SaveChangesModal.jsx","providers/SaveChangesModalContext.jsx","features/resource-management/ResourceList.jsx","constants/xml-editor.js","components/XMLEditor.jsx","features/resource-management/ResourceManagementEditor.jsx","features/resource-management/Reference.jsx","features/resource-management/ResourceManagementContainer.jsx","features/xml-editor/ResourceEditor.jsx","assets/images/api-docs/api-docs-bg.svg","features/docs/Redoc.jsx","utils/auth.js","features/auth/LoginView.jsx","providers/GlobalContext.jsx","app/App.jsx","index.js"],"names":["navigationConfig","menu","resources","path","src","alt","title","resourceManager","docs","localStorage","defaultItem","APIDocsIcon","help","AboutIcon","logout","LogoutIcon","NavMenuItem","config","width","NavDropdown","Item","as","Link","to","style","paddingTop","marginLeft","Divider","NavigationBar","Navbar","sticky","bg","className","height","boxSizing","Container","paddingLeft","Brand","cursor","MTGLogo","Nav","alignRight","marginRight","fontSize","verticalAlign","id","Object","keys","map","key","newResourceDefaultVal","API_URL_DOMAIN","process","API_URL","apis","axios","create","baseURL","headers","Authorization","token","doLogin","username","password","a","post","fetchResources","get","fetchXML","resourceName","resourceVersion","saveResourceXML","name","version","xmlBody","put","createNewResource","encodeURIComponent","deleteResource","type","fetch","method","DeleteAlertModal","onConfirm","btn","message","objectName","closeModal","useState","modalOpen","setModalOpen","Fragment","onClick","Modal","contentLabel","show","ErrorModal","props","state","dispatch","open","aria-labelledby","backdrop","onHide","centered","Header","closeButton","fontWeight","Body","Footer","Button","variant","ErrorStateContext","createContext","ErrorDispatchContext","initialModalState","actionTypes","reducer","action","payload","openModal","Error","ErrorModalProvider","useReducer","Provider","value","children","useErrorModalContext","useContext","undefined","LoadingModal","loading","size","color","LoadingStateContext","LoadingDispatchContext","defaultLoadingMessage","openLoadingModal","LoadingProvider","useLoadingContext","monthNames","getPrintableDate","val","date","day","getDate","monthIndex","getMonth","month","year","getFullYear","hours","getHours","minutes","getMinutes","formatDate","Date","setParams","queries","searchParams","URLSearchParams","set","toString","searchStyle","position","display","initialData","ResourceTable","error","setError","setLoading","data","setData","setDeleteModalOpen","renaming","setRenaming","selectedForRename","setSelectedForRename","newName","setNewName","SearchBar","Search","columns","dataField","text","hidden","searchable","headerTitle","sort","headerAlign","headerStyle","formatter","cell","row","url","app","isNew","textDecoration","align","_cell","openRes","endpoint","getXMLAndDownloadResource","openRenameModal","deleteFileHandler","_","window","deleteResourceFile","onDelete","getXMLForSelectedResource","createNewResourceWithSameXML","xml","newResourceName","test","renameHandler","e","preventDefault","downloadAsFile","filename","element","document","createElement","setAttribute","body","appendChild","click","removeChild","then","res","catch","err","alert","useEffect","i","length","obj","tag","tags","lastmodified","created","options","push","bootstrap4","keyField","search","searchProps","placeholder","striped","defaultSortDirection","responsive","hover","condensed","baseProps","Form","Control","defaultValue","onChange","target","Resources","connectionError","setConnectionError","getResources","Row","Col","lg","history","rel","href","currentApiVersion","StyledListItem","styled","ListGroup","CustomScrollBarDiv","div","ScrollableDivs","CustomList","listConfig","active","isActive","onClickItem","ResourceContext","initialResource","isNewResource","ResourceProvider","cmRef","createRef","selectedResource","setSelectedResource","saved","setSaved","handlers","refs","SaveChangesModal","console","log","SaveChangesStateContext","SaveChangesDispatchContext","SaveChangesModalProvider","useSaveChangesModalContext","ResourceList","setSaveChanges","trimAsteriskFromTitle","replace","marginBottom","cmTags","Tag","attrs","Desc","Sql","ref","requires","when","onblank","onerror","classname","output","limit","offset","datasource","Transaction","attr","Arg","Execute","Script","file","Param","max","min","maxlength","minlength","pattern","exists","required","XRequest","Text","Request","status","item","Resource","auth","parent","XMLEditor","forwardRef","onTextChange","darkTheme","completeAfter","editor","pred","setTimeout","completionActive","cm","showHint","hint","schemaInfo","Pass","setKey","completeIfInTag","tok","getTokenAt","getCursor","string","charAt","innerMode","getMode","tagName","codemirrorOptions","lineNumbers","autoCloseBrackets","mode","autofocus","keyMap","foldGutter","inputStyle","gutters","extraKeys","cur","getRange","Pos","line","ch","cmInstance","toggleComment","indent","F12","execCommand","theme","autoFocus","ResourceManagementEditor","setDarkTheme","savedValue","setSavedValue","setValue","documentModified","setDocumentModified","xmlResponse","setXmlResponse","onBeforeUnload","ev","returnValue","saveResource","removeEventListener","saveHandler","darkMode","marginTop","prevState","newState","addEventListener","details","ResourceManagement","Reference","newResourceTitle","ResourceEditor","nameModalOpen","setNameModalOpen","saving","resNameError","emptyWarningModal","setEmptyWarningModal","savedOnce","setNewResourceName","xmlUpdated","setXmlUpdated","getModifiedTitle","createResource","xmlDoc","DOMParser","parseFromString","ActiveXObject","async","loadXML","getElementsByTagName","getAttribute","isSameVersion","query","response","getParams","location","current","getCodeMirror","Breadcrumb","event","APIDocs","spec","getSpec","match","params","json","JSON","parse","setState","this","DocIcon","Component","userLoggedIn","getItem","encodePasswordBase64","btoa","defaultInputState","LoginView","inputState","setInputState","handleSubmit","setItem","active_id","handleChange","clear","onSubmit","Group","Label","GlobalContext","defaultAuthState","isLoggedIn","GlobalProvider","authState","setAuthState","updateAuthState","globalState","globalHandlers","AuthenticatedRoute","component","rest","render","RedirectToResources","LogOut","App","context","useGlobalContext","Switch","exact","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a29daba3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/about-icon.44db342d.svg\";","export default __webpack_public_path__ + \"static/media/api-docs-icon.739516cd.svg\";","export default __webpack_public_path__ + \"static/media/logout-icon.f9b9901d.svg\";","import AboutIcon from 'assets/images/menu/about-icon.svg'\nimport APIDocsIcon from 'assets/images/menu/api-docs-icon.svg'\nimport LogoutIcon from 'assets/images/menu/logout-icon.svg'\nimport ResourcesIcon from 'assets/images/menu/resources-icon.svg'\nimport ResourceManagerIcon from 'assets/images/menu/resourceManager-icon.svg'\n\nexport const navigationConfig = {\n  menu: {\n    resources: {\n      path: '/resources',\n      src: ResourcesIcon,\n      alt: 'resources icon',\n      title: 'Resources',\n    },\n    resourceManager: {\n      path: '/resource-manager',\n      src: ResourceManagerIcon,\n      alt: 'resource-manager icon',\n      title: 'Resource Manager',\n    },\n    docs: {\n      path: `/docs/${localStorage.defaultItem}`,\n      src: APIDocsIcon,\n      alt: 'api docs icon',\n      title: 'API Docs',\n    },\n    help: {\n      path: '/help',\n      src: AboutIcon,\n      alt: 'about icon',\n      title: 'About',\n    },\n    logout: {\n      path: '/logout',\n      src: LogoutIcon,\n      alt: 'logout icon',\n      title: 'Log Out',\n    },\n  },\n}\n","export default __webpack_public_path__ + \"static/media/resources-icon.993b4626.svg\";","export default __webpack_public_path__ + \"static/media/resourceManager-icon.8b36346c.svg\";","import React, { Fragment } from 'react'\r\nimport { NavDropdown } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction NavMenuItem({ config }) {\r\n  const { path, src, alt, title, width } = config\r\n  return (\r\n    <Fragment>\r\n      <NavDropdown.Item as={Link} to={path} style={{ paddingTop: '7px' }}>\r\n        <img width={width} src={src} alt={alt} />\r\n        <span style={{ marginLeft: '7px' }}> {title} </span>\r\n      </NavDropdown.Item>\r\n      <NavDropdown.Divider />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default NavMenuItem\r\n","export default __webpack_public_path__ + \"static/media/metamug-console-logo.9d26574d.png\";","import { navigationConfig } from 'app/navigationConfig'\r\nimport NavMenuItem from 'app/NavMenuItem'\r\nimport React from 'react'\r\nimport { Container, Nav, Navbar, NavDropdown } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport MTGLogo from 'assets/images/metamug-console-logo.png'\r\n\r\nfunction NavigationBar() {\r\n  return (\r\n    <Navbar\r\n      sticky=\"top\"\r\n      bg=\"primary\"\r\n      className=\"text-white\"\r\n      style={{ height: '60px', boxSizing: 'border-box' }}\r\n    >\r\n      <Container style={{ paddingLeft: '8px' }}>\r\n        <Navbar.Brand as={Link} style={{ cursor: 'pointer' }} to=\"/resources\">\r\n          <img\r\n            alt=\"Api console\"\r\n            style={{ cursor: 'pointer' }}\r\n            src={MTGLogo}\r\n            height=\"24px\"\r\n          />\r\n        </Navbar.Brand>\r\n        <Nav>\r\n          <NavDropdown\r\n            alignRight\r\n            style={{ marginRight: '5px' }}\r\n            title={\r\n              <b className=\"text-white\">\r\n                <i\r\n                  className=\"fa fa-server fa-fw\"\r\n                  style={{\r\n                    fontSize: '18px',\r\n                    verticalAlign: 'middle',\r\n                    marginRight: '1px',\r\n                  }}\r\n                />\r\n                Menu\r\n              </b>\r\n            }\r\n            id=\"backend-dropdown\"\r\n          >\r\n            {Object.keys(navigationConfig.menu).map((key) => (\r\n              <NavMenuItem\r\n                key={navigationConfig.menu[key].path}\r\n                config={navigationConfig.menu[key]}\r\n              />\r\n            ))}\r\n          </NavDropdown>\r\n        </Nav>\r\n      </Container>\r\n    </Navbar>\r\n  )\r\n}\r\n\r\nexport default NavigationBar\r\n","/* eslint-disable no-undef */\r\nexport const newResourceDefaultVal =\r\n  '<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\\n' +\r\n  '<Resource xmlns=\"http://xml.metamug.net/resource/1.0\" v=\"1.0\">\\n\\n' +\r\n  '\\t<Request method=\"GET\">\\n' +\r\n  '\\t\\t<Desc> Example Resource </Desc>\\n' +\r\n  '\\t\\t<Sql id=\"myQuery\"> SELECT \\'Hello World\\' </Sql>\\n' +\r\n  '\\t</Request>\\n\\n' +\r\n  '</Resource>'\r\n\r\nexport const API_URL_DOMAIN = process.env.REACT_APP_API_URL_DOMAIN || ''\r\nexport const API_URL_CONTEXT =\r\n  process.env.REACT_APP_API_URL_CONTEXT || '/console'\r\nexport const API_URL = API_URL_DOMAIN + API_URL_CONTEXT\r\nexport const UTM =\r\n  '?utm_source=metamug-api-console&utm_medium=link&utm_campaign=product-guide'\r\n","import axios from 'axios'\nimport { API_URL } from 'constants/resource'\n\nconst apis = axios.create({\n  baseURL: API_URL,\n  headers: {\n    Authorization: localStorage.token,\n  },\n})\n\nconst backendName = 'api'\n\nexport async function doLogin(username, password) {\n  return await apis.post(\n    'accesstoken',\n    `username=${username}&password=${password}`\n  )\n}\n\nexport async function fetchResources() {\n  return await apis.get(`/app/${backendName}/rpx`)\n}\nexport async function fetchXML(resourceName, resourceVersion) {\n  return await apis.get(\n    `/app/${localStorage.defaultItem}/rpx/${resourceVersion}/${resourceName}`\n  )\n}\n\nexport async function saveResourceXML(name, version, xmlBody) {\n  return await apis.put(\n    `/app/${localStorage.defaultItem}/rpx/${version}/${name}`,\n    xmlBody\n  )\n}\nexport async function createNewResource(name, xmlBody) {\n  return await apis.post(\n    `/app/${localStorage.defaultItem}/rpx/`,\n    `filename=${name}.xml&data=${encodeURIComponent(xmlBody)}`\n  )\n}\n\nexport async function deleteResource(name, version, type) {\n  return await fetch(\n    `${API_URL}/app/${localStorage.defaultItem}/rpx/${version}/${name}?type=${type}`,\n    {\n      headers: {\n        Authorization: localStorage.token,\n      },\n      method: 'DELETE',\n    }\n  )\n}\n","// delete-alert.jsx\r\nimport React, { useState } from 'react'\r\nimport { Modal } from 'react-bootstrap'\r\n\r\nfunction DeleteAlertModal({\r\n  onConfirm,\r\n  title,\r\n  btn,\r\n  message,\r\n  objectName,\r\n  closeModal,\r\n}) {\r\n  const [modalOpen, setModalOpen] = useState(false)\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <span\r\n        title={title}\r\n        onClick={() => setModalOpen(true)}\r\n        style={{ cursor: 'pointer' }}\r\n        className={\r\n          btn\r\n            ? 'btn btn-default fa fa-trash'\r\n            : title === 'Delete DataSource'\r\n            ? 'fa fa-trash fa-lg text-success'\r\n            : 'fa fa-lg fa-trash-o fa-fw'\r\n        }\r\n      />\r\n\r\n      <Modal contentLabel=\"delete-resource-modal\" show={modalOpen}>\r\n        <div>\r\n          <div className=\"modal-header\">\r\n            <h5>{message}</h5>\r\n          </div>\r\n\r\n          <div className=\"modal-body\">\r\n            <div>\r\n              <b>{objectName}</b>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"modal-footer\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-danger\"\r\n              onClick={() => {\r\n                setModalOpen(false)\r\n                onConfirm()\r\n              }}\r\n            >\r\n              Yes\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-default\"\r\n              onClick={() => setModalOpen(false)}\r\n            >\r\n              No\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default DeleteAlertModal\r\n","import React from 'react'\r\nimport { Button, Modal } from 'react-bootstrap'\r\n\r\nexport default function ErrorModal(props) {\r\n  const { state, dispatch } = props\r\n\r\n  const { open, message } = state\r\n\r\n  return (\r\n    <Modal\r\n      show={open}\r\n      aria-labelledby=\"Error Modal\"\r\n      backdrop=\"static\"\r\n      onHide={() => dispatch({ type: 'close' })}\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <h4\r\n          className=\"modal-title\"\r\n          style={{ fontWeight: 'bold', fontSize: '17px' }}\r\n        >\r\n          Error!\r\n        </h4>\r\n      </Modal.Header>\r\n      <Modal.Body>{message}</Modal.Body>\r\n      <Modal.Footer>\r\n        <Button\r\n          type=\"button\"\r\n          variant=\"danger\"\r\n          onClick={() => dispatch({ type: 'close' })}\r\n        >\r\n          Close\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  )\r\n}\r\n","// Wraps Entire app, check entry.js\r\nimport React, { createContext, useContext, useReducer } from 'react'\r\nimport ErrorModal from 'components/ErrorModal'\r\n\r\nconst ErrorStateContext = createContext()\r\nconst ErrorDispatchContext = createContext()\r\n\r\nconst initialModalState = {\r\n  open: false,\r\n  message: '',\r\n}\r\n\r\nfunction openModal(state, payload) {\r\n  const { message } = payload\r\n  return { open: true, message }\r\n}\r\n\r\nconst actionTypes = {\r\n  OPEN: 'open',\r\n  CLOSE: 'close',\r\n}\r\n\r\nfunction reducer(state, action) {\r\n  const { payload } = action\r\n  switch (action.type) {\r\n    case actionTypes.OPEN:\r\n      return openModal(state, payload)\r\n    case actionTypes.CLOSE:\r\n      return { open: false, message: '' }\r\n    default:\r\n      throw new Error('Invalid Action')\r\n  }\r\n}\r\n\r\nexport default function ErrorModalProvider(props) {\r\n  const [state, dispatch] = useReducer(reducer, initialModalState)\r\n\r\n  return (\r\n    <ErrorDispatchContext.Provider value={dispatch}>\r\n      <ErrorStateContext.Provider value={state}>\r\n        <ErrorModal state={state} dispatch={dispatch} />\r\n        {props.children}\r\n      </ErrorStateContext.Provider>\r\n    </ErrorDispatchContext.Provider>\r\n  )\r\n}\r\n\r\nfunction useErrorModalContext() {\r\n  const state = useContext(ErrorStateContext)\r\n  const dispatch = useContext(ErrorDispatchContext)\r\n  if (state === undefined || dispatch === undefined) {\r\n    throw new Error('no context available')\r\n  }\r\n  return [state, dispatch]\r\n}\r\n\r\nconst withErrorModalContext = (Component) => (props) => {\r\n  const [state, dispatch] = useErrorModalContext()\r\n  return <Component dispatch={dispatch} state={state} {...props} />\r\n}\r\n\r\nexport { useErrorModalContext, withErrorModalContext }\r\n","import React from 'react'\r\nimport { Modal } from 'react-bootstrap'\r\n\r\nexport default function LoadingModal(props) {\r\n  const { state, dispatch } = props\r\n\r\n  const { loading, message } = state\r\n\r\n  return (\r\n    <Modal\r\n      show={loading}\r\n      aria-labelledby=\"Loading Modal\"\r\n      backdrop=\"static\"\r\n      size=\"sm\"\r\n      onHide={() => dispatch({ type: 'close' })}\r\n      centered\r\n    >\r\n      <Modal.Body>\r\n        {' '}\r\n        <h6>\r\n          {message}\r\n          <span\r\n            style={{ color: '#34495e' }}\r\n            className=\"fa fa-circle-o-notch fa-spin pull-right\"\r\n          />\r\n        </h6>\r\n      </Modal.Body>\r\n    </Modal>\r\n  )\r\n}\r\n","// Wraps Entire app, check entry.js\r\nimport React, { createContext, useContext, useReducer } from 'react'\r\nimport LoadingModal from 'components/LoadingModal'\r\n\r\nconst LoadingStateContext = createContext()\r\nconst LoadingDispatchContext = createContext()\r\n\r\nconst defaultLoadingMessage = 'Loading ...'\r\n\r\nconst initialModalState = {\r\n  loading: false,\r\n  message: defaultLoadingMessage,\r\n}\r\n\r\nfunction openLoadingModal(state, payload) {\r\n  const { message } = payload || {}\r\n  return { loading: true, message: message || defaultLoadingMessage }\r\n}\r\n\r\nfunction closeLoadingModal() {\r\n  return { loading: false, message: defaultLoadingMessage }\r\n}\r\n\r\nconst actionTypes = {\r\n  OPEN: 'open',\r\n  CLOSE: 'close',\r\n}\r\n\r\nfunction reducer(state, action) {\r\n  const { payload } = action\r\n  switch (action.type) {\r\n    case actionTypes.OPEN:\r\n      return openLoadingModal(state, payload)\r\n    case actionTypes.CLOSE:\r\n      return closeLoadingModal(state)\r\n    default:\r\n      throw new Error('Invalid Action')\r\n  }\r\n}\r\n\r\nexport default function LoadingProvider(props) {\r\n  const [state, dispatch] = useReducer(reducer, initialModalState)\r\n\r\n  return (\r\n    <LoadingDispatchContext.Provider value={dispatch}>\r\n      <LoadingStateContext.Provider value={state}>\r\n        <LoadingModal state={state} dispatch={dispatch} />\r\n        {props.children}\r\n      </LoadingStateContext.Provider>\r\n    </LoadingDispatchContext.Provider>\r\n  )\r\n}\r\n\r\nfunction useLoadingContext() {\r\n  const state = useContext(LoadingStateContext)\r\n  const dispatch = useContext(LoadingDispatchContext)\r\n  if (state === undefined || dispatch === undefined) {\r\n    throw new Error('no context available')\r\n  }\r\n  return [state, dispatch]\r\n}\r\n\r\nconst withLoadingContext = (Component) => (props) => {\r\n  const [state, dispatch] = useLoadingContext()\r\n  return <Component dispatch={dispatch} state={state} {...props} />\r\n}\r\n\r\nexport { useLoadingContext, withLoadingContext }\r\n","const monthNames = [\r\n  'Jan',\r\n  'Feb',\r\n  'Mar',\r\n  'Apr',\r\n  'May',\r\n  'Jun',\r\n  'Jul',\r\n  'Aug',\r\n  'Sep',\r\n  'Oct',\r\n  'Nov',\r\n  'Dec',\r\n]\r\n\r\nexport function formatDate(date) {\r\n  const day = date.getDate()\r\n  const monthIndex = date.getMonth()\r\n  const month = monthNames[monthIndex]\r\n  const year = date.getFullYear() % 100\r\n  const hours = date.getHours()\r\n  const minutes = (date.getMinutes() < 10 ? '0' : '') + date.getMinutes()\r\n  return `${month} ${day} '${year}  ${hours}:${minutes}`\r\n}\r\n\r\nexport function getPrintableDate(val) {\r\n  // val \"2017-06-20 15:17:24.0\"\r\n  const date = new Date(val)\r\n  return formatDate(date)\r\n}\r\n","export function setParams(queries) {\r\n  // Queries will be object\r\n  //   const queries = {\r\n  //     name: 'somename',\r\n  //     version: 'someversion',\r\n  //   }\r\n  const searchParams = new URLSearchParams()\r\n  Object.keys(queries).map((key) => searchParams.set(key, queries[key]))\r\n  return searchParams.toString()\r\n}\r\n\r\nexport function getParams(query) {\r\n  // query should be location.search value ex. '?query=react&name=somename'\r\n  const searchParams = new URLSearchParams(query)\r\n  const response = {}\r\n  for (const key of searchParams.keys()) {\r\n    response[key] = searchParams.get(key)\r\n  }\r\n  return response\r\n}\r\n","/* eslint-disable react/display-name */\r\nimport { createNewResource, deleteResource, fetchXML } from 'api/apis'\r\nimport { API_URL_DOMAIN } from 'constants/resource'\r\nimport DeleteAlertModal from 'features/resources/DeleteAlertModal'\r\nimport { useErrorModalContext } from 'providers/ErrorModalContext'\r\nimport { useLoadingContext } from 'providers/LoadingContext'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Button, Form, Modal } from 'react-bootstrap'\r\nimport BootstrapTable from 'react-bootstrap-table-next'\r\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit'\r\nimport { Link } from 'react-router-dom'\r\nimport { getPrintableDate } from 'utils/date'\r\nimport { setParams } from 'utils/queryParams'\r\n\r\nexport const customStyles = {\r\n  content: {\r\n    position: 'fixed',\r\n    border: '2px solid #ccc',\r\n    top: '40%',\r\n    left: '50%',\r\n    right: '70%',\r\n    bottom: 'auto',\r\n    marginRight: '-50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    background: '#fff',\r\n  },\r\n}\r\nconst searchStyle = {\r\n  position: 'relative',\r\n  display: 'flex',\r\n  width: '370px',\r\n  marginLeft: '710px',\r\n}\r\n\r\nconst initialData = []\r\n\r\nfunction ResourceTable(props) {\r\n  const [error, setError] = useErrorModalContext()\r\n\r\n  const [loading, setLoading] = useLoadingContext()\r\n\r\n  const [data, setData] = useState(initialData)\r\n  const [deleteModalOpen, setDeleteModalOpen] = useState(false)\r\n  const [renaming, setRenaming] = useState(false)\r\n  const [selectedForRename, setSelectedForRename] = useState({\r\n    name: '',\r\n    version: '',\r\n  })\r\n  const [newName, setNewName] = useState(selectedForRename.name)\r\n\r\n  const { SearchBar } = Search\r\n  const columns = [\r\n    {\r\n      dataField: 'secure',\r\n      text: 'secure',\r\n      hidden: true,\r\n      searchable: false,\r\n      headerTitle: true,\r\n    },\r\n    {\r\n      dataField: 'name',\r\n      text: 'Name',\r\n      sort: true,\r\n      headerAlign: 'center',\r\n      headerTitle: true,\r\n      headerStyle: {\r\n        fontWeight: 'bold',\r\n      },\r\n      formatter: (cell, row) => {\r\n        const url = `/editor?${setParams({\r\n          name: row.name,\r\n          version: row.version,\r\n          app: 'demo',\r\n          isNew: false,\r\n        })}`\r\n        return (\r\n          <div className=\"text-center\">\r\n            <Link\r\n              style={{ textDecoration: 'none' }}\r\n              // href={this.makeHrefTarget(row.name, row.version)}\r\n              to={url}\r\n            >\r\n              <span>{row.name}</span>\r\n            </Link>\r\n          </div>\r\n        )\r\n      },\r\n    },\r\n    {\r\n      dataField: 'version',\r\n      text: 'Version',\r\n      sort: true,\r\n      align: 'center',\r\n      headerAlign: 'center',\r\n      headerTitle: true,\r\n      headerStyle: {\r\n        fontWeight: 'bold',\r\n      },\r\n    },\r\n    {\r\n      dataField: 'endpoint',\r\n      text: 'Endpoint',\r\n      sort: true,\r\n      headerAlign: 'center',\r\n      headerStyle: {\r\n        fontWeight: 'bold',\r\n      },\r\n      headerTitle: true,\r\n      formatter: (_cell, row) => {\r\n        return (\r\n          <div className=\"text-center\">\r\n            <a\r\n              className=\"text-success\"\r\n              style={{ textDecoration: 'none', cursor: 'pointer' }}\r\n              onClick={() => openRes(this, row.version, row.name)}\r\n            >\r\n              {row.endpoint}\r\n            </a>\r\n          </div>\r\n        )\r\n      },\r\n    },\r\n    {\r\n      dataField: 'lastmodified',\r\n      text: 'Last Modified',\r\n      sort: true,\r\n      headerStyle: {\r\n        fontWeight: 'bold',\r\n      },\r\n      headerAlign: 'center',\r\n      headerTitle: true,\r\n      align: 'center',\r\n    },\r\n\r\n    {\r\n      dataField: 'options',\r\n      text: 'Options',\r\n      headerTitle: true,\r\n      headerAlign: 'center',\r\n      headerStyle: {\r\n        fontWeight: 'bold',\r\n      },\r\n      formatter: (cell, row) => {\r\n        return (\r\n          <div className=\"text-center\">\r\n            <span\r\n              title=\"Download Resource\"\r\n              style={{ cursor: 'pointer' }}\r\n              onClick={() => getXMLAndDownloadResource(row.name, row.version)}\r\n              className=\"fa fa-lg fa-download fa-fw\"\r\n            />\r\n            <span\r\n              title=\"Rename Resource\"\r\n              style={{ cursor: 'pointer' }}\r\n              onClick={() => openRenameModal(row.name, row.version)}\r\n              className=\"fa fa-lg fa-edit fa-fw\"\r\n            />\r\n            <DeleteAlertModal\r\n              onConfirm={() => deleteFileHandler(row.name, row.version)}\r\n              message=\"Are you sure you want to remove this resource?\"\r\n              title=\"Delete Resource\"\r\n              objectName={row.name}\r\n            />\r\n          </div>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  const openRenameModal = (name, version) => {\r\n    setRenaming(true)\r\n    setSelectedForRename({ name, version })\r\n  }\r\n\r\n  const openRes = (_, version, name) => {\r\n    const url = `${API_URL_DOMAIN}/${localStorage.defaultItem}/${version}/${name}`\r\n    window.open(url, '_blank')\r\n  }\r\n\r\n  const deleteFileHandler = async (name, version) => {\r\n    // type \"all\" means both XML and JSP should be deleted\r\n    await deleteResourceFile(name, version, 'all')\r\n  }\r\n\r\n  const deleteResourceFile = async (name, version, type) => {\r\n    setLoading({\r\n      type: 'open',\r\n      payload: { message: `Deleting Resources...` },\r\n    })\r\n    await deleteResource(name, version, type)\r\n    if (type !== 'jsp') {\r\n      setRenaming(false)\r\n      setDeleteModalOpen(false)\r\n      await props.onDelete()\r\n    }\r\n  }\r\n\r\n  const getXMLForSelectedResource = async (name, version) => {\r\n    try {\r\n      const { data } = await fetchXML(name, version)\r\n      return data\r\n    } catch (err) {\r\n      return setError({\r\n        type: 'open',\r\n        payload: { message: error.message || 'Failed to get XML' },\r\n      })\r\n    }\r\n  }\r\n\r\n  const createNewResourceWithSameXML = async (xml, newResourceName) => {\r\n    try {\r\n      if (/^[a-z]+$/.test(newResourceName)) {\r\n        await createNewResource(newResourceName, xml)\r\n      } else {\r\n        throw new Error('Invalid resource name: ' + newResourceName)\r\n      }\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\n  const renameHandler = async (e) => {\r\n    e.preventDefault()\r\n    setRenaming(false)\r\n    setLoading({\r\n      type: 'open',\r\n      payload: { message: 'Renaming resource: ' + selectedForRename.name },\r\n    })\r\n    try {\r\n      const { name, version } = selectedForRename\r\n      const xml = await getXMLForSelectedResource(name, version)\r\n      await createNewResourceWithSameXML(xml, newName, name, version)\r\n      await deleteFileHandler(name, version)\r\n    } catch (error) {\r\n      setLoading({ type: 'close' })\r\n      return setError({\r\n        type: 'open',\r\n        payload: { message: error.message || 'Failed to rename resource' },\r\n      })\r\n    }\r\n  }\r\n\r\n  const downloadAsFile = (filename, text) => {\r\n    const element = document.createElement('a')\r\n    element.setAttribute(\r\n      'href',\r\n      `data:text/plain;charset=utf-8,${encodeURIComponent(text)}`\r\n    )\r\n    element.setAttribute('download', filename)\r\n    element.style.display = 'none'\r\n    document.body.appendChild(element)\r\n    element.click()\r\n    document.body.removeChild(element)\r\n  }\r\n\r\n  const getXMLAndDownloadResource = async (name, version) => {\r\n    await fetchXML(name, version)\r\n      .then((res) => {\r\n        downloadAsFile(`${name}.xml`, res.data)\r\n      })\r\n      .catch((err) =>\r\n        alert('Unable to connect to server. Please check your connection!')\r\n      )\r\n  }\r\n\r\n  useEffect(() => {\r\n    const data = []\r\n    for (let i = 0; i < props.data.length; i++) {\r\n      const obj = {}\r\n      const row = props.data[i]\r\n      obj.name = row.name\r\n      obj.version = row.version\r\n      //   obj.secure = row.secure\r\n      if (row.tag) {\r\n        obj.tags = row.tag\r\n      } else {\r\n        obj.tags = ''\r\n      }\r\n      obj.endpoint = `/${row.version}/${row.name}`\r\n      obj.lastmodified = getPrintableDate(row.created)\r\n      obj.options = 'NA'\r\n      data.push(obj)\r\n    }\r\n    setData(data)\r\n  }, [props.data])\r\n\r\n  return (\r\n    <div>\r\n      <br />\r\n      <ToolkitProvider\r\n        bootstrap4\r\n        keyField=\"endpoint\"\r\n        data={data}\r\n        columns={columns}\r\n        search\r\n      >\r\n        {(props) => (\r\n          <div>\r\n            <SearchBar\r\n              {...props.searchProps}\r\n              className=\"custome-search-field\"\r\n              style={searchStyle}\r\n              placeholder=\"Search...\"\r\n            />\r\n            <br />\r\n            <BootstrapTable\r\n              striped\r\n              defaultSortDirection=\"asc\"\r\n              responsive\r\n              hover\r\n              condensed\r\n              className=\"table table-striped table-bordered table-hover\"\r\n              {...props.baseProps}\r\n            />\r\n          </div>\r\n        )}\r\n      </ToolkitProvider>\r\n\r\n      {/* Rename Modal */}\r\n      <Modal\r\n        contentLabel=\"rename-resource-modal\"\r\n        show={renaming}\r\n        onHide={() => setRenaming(false)}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <h6\r\n            style={{\r\n              fontWeight: 'bold',\r\n              fontSize: '16px',\r\n              paddingTop: '10px',\r\n            }}\r\n          >\r\n            Rename Resource\r\n          </h6>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form.Control\r\n            // onKeyPress={this.handleSaveKeyPress}\r\n            type=\"text\"\r\n            name=\"newname\"\r\n            defaultValue={selectedForRename.name}\r\n            // value={newName}\r\n            onChange={(e) => setNewName(e.target.value)}\r\n          />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"success\" onClick={renameHandler}>\r\n            OK\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ResourceTable\r\n","import { deleteResource, fetchResources } from 'api/apis'\nimport ResourceTable from 'features/resources/ResourceTable'\nimport { useErrorModalContext } from 'providers/ErrorModalContext'\nimport { useLoadingContext } from 'providers/LoadingContext'\nimport React, { useEffect, useState } from 'react'\nimport { Col, Container, Row } from 'react-bootstrap'\nimport { setParams } from 'utils/queryParams'\n\nexport const UTM =\n  '?utm_source=metamug-api-console&utm_medium=link&utm_campaign=product-guide'\n\nfunction Resources(props) {\n  const [error, setError] = useErrorModalContext()\n\n  const [loading, setLoading] = useLoadingContext()\n\n  const [connectionError, setConnectionError] = useState(false)\n  const [data, setData] = useState([])\n\n  const openResourceEditor = () => {\n    if (data.length >= 20) {\n      // openLimitModal()\n    } else {\n      const url = `/editor?${setParams({\n        isNew: true,\n        app: 'demo',\n      })}`\n      props.history.push(url)\n    }\n  }\n\n  const getResources = async () => {\n    try {\n      setLoading({\n        type: 'open',\n        payload: { message: `Getting Resources...` },\n      })\n      const { data } = await fetchResources()\n      setData(data.data)\n      setLoading({ type: 'close' })\n    } catch (error) {\n      setLoading({ type: 'close' })\n      setConnectionError(true)\n      return setError({\n        type: 'open',\n        payload: { message: error.message || 'Failed to get resources' },\n      })\n    }\n  }\n\n  useEffect(() => {\n    // localStorage.setItem('token', '2e60c561b6bc42c215f7352e7ff16002')\n    // localStorage.setItem('defaultItem', 'demo')\n    getResources()\n  }, [])\n\n  return (\n    <Container className=\"pt-4\">\n      <Row>\n        <Col lg=\"9\">\n          <span style={{ fontSize: '32px', marginLeft: '12px' }}>\n            Resources{' '}\n          </span>\n          {/* Tooltip Overlay */}\n        </Col>\n        <Col lg=\"3\">\n          <div className=\"btn-group float-right\">\n            {/* <ResourceUploadModal\n                  refreshContent={getResources}\n                  resourceData={data}\n                  openLimitModal={openLimitModal}\n                /> */}\n            <button\n              type=\"button\"\n              onClick={openResourceEditor}\n              className=\"btn btn-lg btn-success mr-3\"\n              title=\"Create New Resource\"\n            >\n              Create Resource <i className=\"fa fa-file-code-o fa-fw\" />\n            </button>\n          </div>\n        </Col>\n      </Row>\n      <Container>\n        {/* {!loading && ( */}\n        <div>\n          <br />\n          {data.length !== 0 ? (\n            <div>\n              <ResourceTable data={data} onDelete={getResources} />\n            </div>\n          ) : (\n            <div>\n              {connectionError ? (\n                <div>\n                  <h5 className=\"text text-danger\">Server not reachable!</h5>\n                </div>\n              ) : (\n                <div>\n                  <h5>\n                    You do not have any resources. Click on New Resource to\n                    create a{' '}\n                    <a\n                      style={{ cursor: 'pointer' }}\n                      rel=\"noreferrer\"\n                      target=\"_blank\"\n                      href={`https://metamug.com/docs/resource-file${UTM}&utm_content=${localStorage.currentApiVersion}`}\n                    >\n                      resource\n                    </a>\n                    .\n                  </h5>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n        {/* )} */}\n      </Container>\n    </Container>\n  )\n}\n\nexport default Resources\n","import React from 'react'\nimport { ListGroup } from 'react-bootstrap'\nimport styled from 'styled-components'\n\nconst StyledListItem = styled(ListGroup.Item)`\n  margin: 3px 6px 0 5px;\n  cursor: pointer;\n\n  & .list-group-item,\n  .active {\n    margin: 3px 6px 0 5px;\n  }\n`\nconst CustomScrollBarDiv = styled.div`\n  --scrollbarBG: #e4ecef;\n  --thumbBG: #90a4ae;\n\n  scrollbar-width: thin;\n  scrollbar-color: var(--thumbBG) var(--scrollbarBG);\n\n  &::-webkit-scrollbar {\n    width: 12px;\n  }\n  &::-webkit-scrollbar-track {\n    background: var(--scrollbarBG);\n  }\n  &::-webkit-scrollbar-thumb {\n    background-color: var(--thumbBG);\n    border-radius: 8px;\n    border: 3px solid var(--scrollbarBG);\n  }\n`\n\nconst ScrollableDivs = styled(CustomScrollBarDiv)`\n  height: 73vh;\n  overflow-y: auto;\n\n  & thead th {\n    position: sticky;\n    top: 0;\n  }\n`\n\nexport default function CustomList({ listConfig }) {\n  const { data } = listConfig\n\n  const body = data.map((obj, i) => (\n    <StyledListItem\n      active={obj.isActive}\n      key={obj.name}\n      onClick={obj.isActive ? null : obj.onClickItem}\n    >\n      {obj.name}\n    </StyledListItem>\n  ))\n\n  return (\n    <div>\n      <ScrollableDivs>\n        <ListGroup>{body}</ListGroup>\n      </ScrollableDivs>\n    </div>\n  )\n}\n","import React, { createContext, createRef, useContext, useState } from 'react'\n\nconst ResourceContext = createContext()\n\nexport const newResourceTitle = 'New Resource'\n\nconst initialResource = {\n  name: newResourceTitle,\n  version: '1.0',\n  isNewResource: true,\n}\n\nexport default function ResourceProvider(props) {\n  const cmRef = createRef()\n\n  const [selectedResource, setSelectedResource] = useState(initialResource)\n\n  const [saved, setSaved] = useState(true)\n\n  return (\n    <ResourceContext.Provider\n      value={{\n        state: {\n          selectedResource,\n          saved,\n        },\n        handlers: {\n          setSelectedResource,\n          setSaved,\n        },\n        refs: { cmRef },\n      }}\n    >\n      {props.children}\n    </ResourceContext.Provider>\n  )\n}\n\nfunction useResourceContext() {\n  const context = useContext(ResourceContext)\n  if (context === undefined) {\n    throw new Error('Context Unavailable')\n  }\n  return [context.state, context.handlers, context.refs]\n}\n\nexport { ResourceContext, useResourceContext }\n","import React from 'react'\nimport { Button, Modal } from 'react-bootstrap'\n\nexport default function SaveChangesModal(props) {\n  const { state, dispatch } = props\n  const { open, message } = state\n\n  return (\n    <Modal\n      show={open}\n      aria-labelledby=\"SaveChanges Modal\"\n      backdrop=\"static\"\n      onHide={() => dispatch({ type: 'close' })}\n      centered\n    >\n      <Modal.Header closeButton>\n        <h4\n          className=\"modal-title\"\n          style={{ fontWeight: 'bold', fontSize: '17px' }}\n        >\n          Warning!\n        </h4>\n      </Modal.Header>\n      <Modal.Body>{message}</Modal.Body>\n      <Modal.Footer>\n        <Button\n          type=\"button\"\n          variant=\"primary\"\n          onClick={() => {\n            console.log('save is clicked'), dispatch({ type: 'close' })\n          }}\n        >\n          Save\n        </Button>\n        <Button\n          type=\"button\"\n          variant=\"danger\"\n          onClick={() => {\n            console.log('continue is clicked'), dispatch({ type: 'close' })\n          }}\n        >\n          Continue\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  )\n}\n","// Wraps Entire app, check entry.js\nimport React, { createContext, useContext, useReducer } from 'react'\nimport SaveChangesModal from 'components/SaveChangesModal'\n\nconst SaveChangesStateContext = createContext()\nconst SaveChangesDispatchContext = createContext()\n\nconst initialModalState = {\n  open: false,\n  message: '',\n}\n\nfunction openModal(state, payload) {\n  const { message } = payload\n  return { open: true, message }\n}\n\nconst actionTypes = {\n  OPEN: 'open',\n  CLOSE: 'close',\n}\n\nfunction reducer(state, action) {\n  const { payload } = action\n  switch (action.type) {\n    case actionTypes.OPEN:\n      return openModal(state, payload)\n    case actionTypes.CLOSE:\n      return { open: false, message: '' }\n    default:\n      throw new Error('Invalid Action')\n  }\n}\n\nexport default function SaveChangesModalProvider(props) {\n  const [state, dispatch] = useReducer(reducer, initialModalState)\n\n  return (\n    <SaveChangesDispatchContext.Provider value={dispatch}>\n      <SaveChangesStateContext.Provider value={state}>\n        <SaveChangesModal state={state} dispatch={dispatch} />\n        {props.children}\n      </SaveChangesStateContext.Provider>\n    </SaveChangesDispatchContext.Provider>\n  )\n}\n\nfunction useSaveChangesModalContext() {\n  const state = useContext(SaveChangesStateContext)\n  const dispatch = useContext(SaveChangesDispatchContext)\n  if (state === undefined || dispatch === undefined) {\n    throw new Error('no context available')\n  }\n  return [state, dispatch]\n}\n\nconst withSaveChangesModalContext = (Component) => (props) => {\n  const [state, dispatch] = useSaveChangesModalContext()\n  return <Component dispatch={dispatch} state={state} {...props} />\n}\n\nexport { useSaveChangesModalContext, withSaveChangesModalContext }\n","import React, { useState, useEffect, useContext } from 'react'\nimport { fetchResources } from 'api/apis'\nimport { useErrorModalContext } from 'providers/ErrorModalContext'\nimport { useLoadingContext } from 'providers/LoadingContext'\nimport CustomList from 'elements/CustomList'\nimport { ResourceContext } from 'providers/ResourceContext.jsx'\nimport { useSaveChangesModalContext } from 'providers/SaveChangesModalContext'\n\nexport default function ResourceList() {\n  const [setError] = useErrorModalContext()\n  const { state, handlers } = useContext(ResourceContext)\n\n  const [loading, setLoading] = useLoadingContext()\n  const [saveChanges, setSaveChanges] = useSaveChangesModalContext()\n  const [ConnectionError, setConnectionError] = useState(false)\n  const [data, setData] = useState([])\n\n  const getResources = async () => {\n    try {\n      setLoading({\n        type: 'open',\n        payload: { message: `Getting Resources...` },\n      })\n      const { data } = await fetchResources()\n      setData(data.data)\n      handlers.setSelectedResource({\n        ...state.selectedResource,\n        name: data.data[0].name,\n        version: data.data[0].version,\n        created: data.data[0].created,\n      })\n      setLoading({ type: 'close' })\n    } catch (error) {\n      setLoading({ type: 'close' })\n      setConnectionError(true)\n      return setError({\n        type: 'open',\n        payload: { message: error.message || 'Failed to get resources' },\n      })\n    }\n  }\n\n  const trimAsteriskFromTitle = (name) => {\n    return name.replace(/\\*/g, '')\n  }\n\n  useEffect(() => {\n    getResources()\n  }, [])\n\n  const config = {\n    data: [],\n  }\n\n  data.map((value) => {\n    config.data.push({\n      name: value.name,\n      isActive:\n        trimAsteriskFromTitle(value.name) ===\n        trimAsteriskFromTitle(state.selectedResource.name),\n      onClickItem: () => {\n        if (state.saved) {\n          handlers.setSelectedResource({\n            ...state.selectedResource,\n            name: trimAsteriskFromTitle(value.name),\n            version: value.version,\n            created: value.created,\n          })\n        } else {\n          return setSaveChanges({\n            type: 'open',\n            payload: { message: 'Changes not saved' },\n          })\n        }\n      },\n    })\n  })\n\n  return (\n    <div>\n      <h4\n        style={{\n          marginBottom: '11px',\n          marginLeft: '5px',\n        }}\n      >\n        Resources\n      </h4>\n      <CustomList listConfig={config} />\n    </div>\n  )\n}\n","export const cmTags = {\r\n  '!top': ['Resource'],\r\n  Tag: {\r\n    attrs: { name: null, color: null },\r\n  },\r\n  Desc: {\r\n    children: ['Tag'],\r\n  },\r\n  Sql: {\r\n    attrs: {\r\n      id: null,\r\n      ref: null,\r\n      requires: null,\r\n      when: null,\r\n      onblank: null,\r\n      onerror: null,\r\n      classname: null,\r\n      output: ['true', 'false'],\r\n      limit: null,\r\n      offset: null,\r\n      type: ['query', 'update'],\r\n      datasource: null,\r\n    },\r\n  },\r\n  Transaction: {\r\n    attr: { datasource: null },\r\n    children: ['Sql'],\r\n  },\r\n  Arg: {\r\n    attrs: {\r\n      name: null,\r\n      value: null,\r\n      path: null,\r\n    },\r\n  },\r\n  Execute: {\r\n    attrs: {\r\n      id: null,\r\n      requires: null,\r\n      when: null,\r\n      onerror: null,\r\n      classname: null,\r\n      output: ['true', 'false'],\r\n    },\r\n    children: ['Arg'],\r\n  },\r\n  Script: {\r\n    attrs: {\r\n      id: null,\r\n      output: ['true', 'false'],\r\n      file: null,\r\n      when: null,\r\n    },\r\n  },\r\n  Param: {\r\n    attrs: {\r\n      name: null,\r\n      max: null,\r\n      min: null,\r\n      maxlength: null,\r\n      minlength: null,\r\n      pattern: null,\r\n      exists: null,\r\n      value: null,\r\n      required: ['true', 'false'],\r\n      type: ['date', 'datetime', 'email', 'number', 'text', 'time', 'url'],\r\n    },\r\n  },\r\n  Header: {\r\n    attrs: {\r\n      name: null,\r\n      value: null,\r\n    },\r\n  },\r\n  Body: {},\r\n  XRequest: {\r\n    attrs: {\r\n      id: null,\r\n      when: null,\r\n      url: null,\r\n      classname: null,\r\n      method: ['GET', 'POST', 'PUT', 'DELETE'],\r\n      output: ['true', 'false', 'headers'],\r\n    },\r\n    children: ['Param', 'Header', 'Body'],\r\n  },\r\n  Text: {\r\n    attrs: { id: null, output: ['true', 'false'], when: null },\r\n  },\r\n  Request: {\r\n    attrs: {\r\n      method: ['GET', 'POST', 'PUT', 'DELETE'],\r\n      status: null,\r\n      item: ['true', 'false'],\r\n    },\r\n    children: [\r\n      'Desc',\r\n      'Header',\r\n      'Param',\r\n      'Sql',\r\n      'Execute',\r\n      'XRequest',\r\n      'Text',\r\n      'Script',\r\n    ],\r\n  },\r\n  Resource: {\r\n    attrs: {\r\n      version: null,\r\n      auth: null,\r\n      parent: null,\r\n    },\r\n    children: ['Desc', 'Request'],\r\n  },\r\n}\r\n","/* eslint-disable react/display-name */\r\nimport cm from 'codemirror'\r\nimport 'codemirror/addon/comment/comment'\r\nimport 'codemirror/addon/dialog/dialog'\r\nimport 'codemirror/addon/dialog/dialog.css'\r\nimport 'codemirror/addon/fold/brace-fold'\r\nimport 'codemirror/addon/fold/comment-fold'\r\nimport 'codemirror/addon/fold/foldcode'\r\nimport 'codemirror/addon/fold/foldgutter'\r\nimport 'codemirror/addon/fold/foldgutter.css'\r\nimport 'codemirror/addon/fold/indent-fold'\r\nimport 'codemirror/addon/fold/xml-fold'\r\nimport 'codemirror/addon/hint/show-hint'\r\nimport 'codemirror/addon/hint/show-hint.css'\r\nimport 'codemirror/addon/hint/xml-hint'\r\nimport 'codemirror/addon/scroll/annotatescrollbar'\r\nimport 'codemirror/addon/search/matchesonscrollbar'\r\nimport 'codemirror/addon/search/matchesonscrollbar.css'\r\nimport 'codemirror/addon/search/search'\r\nimport 'codemirror/addon/search/searchcursor'\r\nimport 'codemirror/keymap/sublime'\r\nimport 'codemirror/lib/codemirror.css'\r\nimport 'codemirror/theme/material.css'\r\nimport 'codemirror/theme/neat.css'\r\nimport React, { forwardRef, useEffect, useState, useContext } from 'react'\r\nimport Codemirror from 'react-codemirror'\r\n\r\nimport 'codemirror/mode/xml/xml'\r\n\r\nimport 'codemirror/addon/display/placeholder'\r\nimport { cmTags } from 'constants/xml-editor'\r\nimport { ResourceContext } from 'providers/ResourceContext.jsx'\r\n\r\nconst XMLEditor = forwardRef(\r\n  ({ value, onTextChange, darkTheme, ...props }, ref) => {\r\n    const completeAfter = (editor, pred) => {\r\n      // const codeMirror = refs['xmlEditor'].getCodeMirrorInstance();\r\n      if (!pred || pred())\r\n        setTimeout(() => {\r\n          if (!editor.state.completionActive)\r\n            cm.showHint(editor, cm.hint.xml, {\r\n              schemaInfo: cmTags,\r\n            })\r\n        }, 100)\r\n      return cm.Pass\r\n    }\r\n\r\n    const { state, handlers } = useContext(ResourceContext)\r\n    const [key, setKey] = useState(0)\r\n\r\n    const completeIfAfterLt = (editor) => {\r\n      // const codeMirror = refs['xmlEditor'].getCodeMirrorInstance();\r\n      return completeAfter(editor, () => {\r\n        const cur = editor.getCursor()\r\n        return editor.getRange(cm.Pos(cur.line, cur.ch - 1), cur) === '<'\r\n      })\r\n    }\r\n\r\n    const completeIfInTag = (editor) => {\r\n      return completeAfter(editor, () => {\r\n        const tok = editor.getTokenAt(editor.getCursor())\r\n        if (\r\n          tok.type === 'string' &&\r\n          (!/['\"]/.test(tok.string.charAt(tok.string.length - 1)) ||\r\n            tok.string.length === 1)\r\n        )\r\n          return false\r\n        const inner = cm.innerMode(editor.getMode(), tok.state).state\r\n        return inner.tagName\r\n      })\r\n    }\r\n\r\n    const cmAutoComplete = (editor) => {\r\n      // const codeMirror = refs['xmlEditor'].getCodeMirrorInstance();\r\n      cm.showHint(editor, cm.hint.xml, { schemaInfo: cmTags })\r\n    }\r\n    const toggleComment = (cmInstance) => {\r\n      cmInstance.toggleComment({ indent: true })\r\n    }\r\n\r\n    const indentToggle = (cmInstance) => {\r\n      cmInstance.execCommand('indentAuto')\r\n    }\r\n\r\n    const codemirrorOptions = {\r\n      lineNumbers: true,\r\n      autoCloseBrackets: true,\r\n      mode: 'xml',\r\n      autofocus: true,\r\n      placeholder: `Type here...  \\n \\n Press Ctrl+S to save`,\r\n      keyMap: 'sublime',\r\n      foldGutter: true,\r\n      inputStyle: 'contenteditable',\r\n      gutters: ['CodeMirror-linenumbers', 'CodeMirror-foldgutter'],\r\n      extraKeys: {\r\n        \"'<'\": completeAfter,\r\n        \"'/'\": completeIfAfterLt,\r\n        \"' '\": completeIfInTag,\r\n        \"'='\": completeIfInTag,\r\n        'Ctrl-Space': cmAutoComplete,\r\n        'Ctrl-/': toggleComment,\r\n        F12: indentToggle,\r\n        // \"Ctrl-Q\": function(cm){cm.foldCode(cm.getCursor())}\r\n      },\r\n    }\r\n\r\n    useEffect(() => {\r\n      setKey(key + 1)\r\n    }, [state.selectedResource])\r\n\r\n    return (\r\n      <div>\r\n        <Codemirror\r\n          options={{\r\n            ...codemirrorOptions,\r\n            theme: darkTheme ? 'material' : 'neat',\r\n          }}\r\n          {...props}\r\n          key={key}\r\n          onChange={onTextChange}\r\n          autoFocus\r\n          ref={ref}\r\n          value={value}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n)\r\n\r\nexport default XMLEditor\r\n","import XMLEditor from 'components/XMLEditor'\nimport { API_URL_DOMAIN, newResourceDefaultVal } from 'constants/resource'\nimport React, { createRef, useEffect, useState, useContext } from 'react'\nimport { fetchXML } from 'api/apis'\nimport { saveResourceXML } from 'api/apis'\nimport { useLoadingContext } from 'providers/LoadingContext'\nimport { useErrorModalContext } from 'providers/ErrorModalContext'\nimport { useSaveChangesModalContext } from 'providers/SaveChangesModalContext'\nimport { ResourceContext } from 'providers/ResourceContext.jsx'\n\nconst newResourceTitle = 'New Resource'\n\nexport default function ResourceManagementEditor(props) {\n  const { state, handlers } = useContext(ResourceContext)\n\n  const cmRef = createRef()\n\n  const [loading, setLoading] = useLoadingContext()\n  const [error, setError] = useErrorModalContext()\n  const [saveChanges, setSaveChanges] = useSaveChangesModalContext()\n  const [connectionError, setConnectionError] = useState(false)\n  const [darkTheme, setDarkTheme] = useState(false)\n  const [isNew, setIsNew] = useState(false)\n  const [savedValue, setSavedValue] = useState(newResourceDefaultVal)\n  const [value, setValue] = useState(newResourceDefaultVal)\n  const [documentModified, setDocumentModified] = useState(false)\n  const [nameModalOpen, setNameModalOpen] = useState(false)\n  const [saving, setSaving] = useState(false)\n  const [resNameError, setResNameError] = useState(false)\n  const [emptyWarningModal, setEmptyWarningModal] = useState(false)\n  // const [error, setError] = useState(false)\n  const [errorMessage, setErrorMessage] = useState('')\n  const [savedOnce, setSavedOnce] = useState(false)\n  const [newResourceName, setNewResourceName] = useState('')\n  const [xmlResponse, setXmlResponse] = useState(false)\n  const [xmlUpdated, setXmlUpdated] = useState(false)\n  const { name, version, created, isNewResource } = state.selectedResource\n\n  const onBeforeUnload = (ev) => {\n    // eslint-disable-next-line no-param-reassign\n    ev.returnValue = 'Are you sure you want to leave this page?'\n  }\n\n  const openRes = () => {\n    const url = `${API_URL_DOMAIN}/${localStorage.defaultItem}/${version}/${name}`\n    window.open(url, '_blank')\n  }\n\n  const getModifiedTitle = (name) => {\n    return `${name}*`\n  }\n\n  const trimAsteriskFromTitle = (name) => {\n    return name.replace(/\\*/g, '')\n  }\n\n  const onTextChange = (text) => {\n    if (!documentModified) {\n      window.addEventListener('beforeunload', onBeforeUnload)\n      document.title += ' *'\n      setDocumentModified(true)\n      return setValue(text)\n    }\n    return setValue(text)\n  }\n\n  const isSameVersion = () => {\n    let xmlDoc\n    if (window.DOMParser) {\n      const parser = new DOMParser()\n      xmlDoc = parser.parseFromString(value, 'text/xml')\n    } else {\n      // Internet Explorer\n      // eslint-disable-next-line no-undef\n      xmlDoc = new ActiveXObject('Microsoft.XMLDOM')\n      xmlDoc.async = false\n      xmlDoc.loadXML(value)\n    }\n    const versionFromXML = `v${xmlDoc\n      .getElementsByTagName('Resource')[0]\n      .getAttribute('v')}`\n    return versionFromXML === version\n  }\n\n  const saveResource = async () => {\n    console.log('saving is called')\n    try {\n      setLoading({\n        type: 'open',\n        payload: { message: `Saving Resource...` },\n      })\n      await saveResourceXML(trimAsteriskFromTitle(name), version, value)\n      setDocumentModified(false)\n      document.title = state.selectedResource.name\n      setSavedValue(value)\n      setLoading({ type: 'close' })\n      handlers.setSaved(true)\n      window.removeEventListener('beforeunload', onBeforeUnload)\n    } catch (error) {\n      setLoading({ type: 'close' })\n      return setError({\n        type: 'open',\n        payload: { message: error.message || 'Failed to save resource' },\n      })\n    }\n  }\n\n  const saveHandler = (e) => {\n    e.preventDefault()\n    if (value !== '') {\n      saveResource()\n    } else {\n      return setError({\n        type: 'open',\n        payload: { message: 'Resource XML cannot be empty' },\n      })\n    }\n  }\n\n  const toggleThemeAndUpdateLStorage = () => {\n    setDarkTheme((prevState) => {\n      const newState = !prevState\n      localStorage.darkMode = newState\n      return newState\n    })\n  }\n\n  const getXMLForSelectedResource = async () => {\n    try {\n      setLoading({\n        type: 'open',\n        payload: { message: `Getting resource data...` },\n      })\n      const { data } = await fetchXML(\n        trimAsteriskFromTitle(state.selectedResource.name),\n        state.selectedResource.version\n      )\n      setXmlResponse(true)\n      setSavedValue(data)\n      setValue(data)\n      return setLoading({ type: 'close' })\n    } catch (error) {\n      setLoading({ type: 'close' })\n      return setError({\n        type: 'open',\n        payload: {\n          message: 'Could not get resource data',\n          saveHandler: saveHandler(),\n        },\n      })\n    }\n  }\n\n  useEffect(() => {\n    setDarkTheme(localStorage.darkMode)\n  }, [])\n\n  useEffect(() => {\n    // if (cmRef.current && xmlResponse !== '') {\n    //   if (!xmlUpdated) {\n    //     cmRef.current.getCodeMirror().setValue(xmlResponse)\n    //     setXmlUpdated(true)\n    //   }\n    // }\n  }, [cmRef])\n\n  useEffect(() => {\n    if (trimAsteriskFromTitle(state.selectedResource.name) !== newResourceTitle)\n      getXMLForSelectedResource()\n    return () => {\n      window.removeEventListener('beforeunload', onBeforeUnload)\n    }\n  }, [trimAsteriskFromTitle(state.selectedResource.name)])\n\n  useEffect(() => {\n    document.title = state.selectedResource.name\n    /*if (value != savedValue) {\n      //handlers.setSaved(false)\n      return setSaveChanges({\n        type: 'open',\n        payload: { message: 'Changes not saved' },\n      })\n    }*/\n  }, [state.selectedResource.name])\n\n  useEffect(() => {\n    if (value === savedValue) {\n      handlers.setSaved(true)\n      document.title = state.selectedResource.name\n      window.removeEventListener('beforeunload', onBeforeUnload)\n      setDocumentModified(false)\n      if (xmlResponse) {\n        handlers.setSelectedResource({\n          ...state.selectedResource,\n          name: trimAsteriskFromTitle(state.selectedResource.name),\n        })\n        setXmlResponse(false)\n      }\n    } else {\n      handlers.setSaved(false)\n    }\n  }, [value])\n\n  return (\n    <div>\n      <span\n        style={{\n          marginBottom: '5px',\n          width: '31px',\n          height: '35px',\n          paddingLeft: '4px',\n        }}\n        title=\"Save File\"\n        onClick={saveHandler}\n        className=\"btn btn-primary btn-sm\"\n      >\n        <i\n          style={{\n            marginTop: '6px',\n          }}\n          className=\"fa fa-floppy-o fa-fw fa-lg\"\n        />\n      </span>\n      <span\n        title=\"Open resource in browser\"\n        onClick={openRes}\n        style={{\n          height: '35px',\n          cursor: 'pointer',\n          marginBottom: '5px',\n          marginLeft: '5px',\n          width: '31px',\n        }}\n        className=\"btn btn-primary btn-sm\"\n      >\n        <i\n          className=\"fa fa-lg fa-location-arrow fa-inverse\"\n          style={{\n            marginTop: '7px',\n          }}\n        />\n      </span>\n\n      <span\n        title=\"Theme\"\n        style={{\n          height: '35px',\n          cursor: 'pointer',\n          marginLeft: '5px',\n          marginBottom: '5px',\n          width: '31px',\n          paddingLeft: '9px',\n        }}\n        onClick={toggleThemeAndUpdateLStorage}\n        className=\"btn btn-primary\"\n      >\n        {darkTheme ? (\n          <i className=\"fa fa-lg fa-moon-o\" />\n        ) : (\n          <i className=\"fa fa-lg fa-lightbulb-o\" />\n        )}\n      </span>\n      <div className=\"XMLInput mt-2\">\n        <XMLEditor\n          ref={cmRef}\n          documentModified={documentModified}\n          onTextChange={onTextChange}\n          value={value}\n          darkTheme={darkTheme}\n        />\n      </div>\n    </div>\n  )\n}\n","import React, { useContext } from 'react'\nimport { ListGroup } from 'react-bootstrap'\nimport styled from 'styled-components'\nimport { ResourceContext } from 'providers/ResourceContext.jsx'\nimport { getPrintableDate } from 'utils/date'\n\nconst StyledListItem = styled(ListGroup.Item)`\n  margin: 3px 6px 0 5px;\n\n  & .list-group-item,\n  .active {\n    margin: 3px 6px 0 5px;\n  }\n`\n\nexport default function () {\n  const { state, handlers } = useContext(ResourceContext)\n\n  const details = (\n    <div>\n      <StyledListItem>\n        {' '}\n        <span style={{ marginRight: '15px', fontSize: '16px' }}>Name:</span>\n        {state.selectedResource.name}{' '}\n      </StyledListItem>\n      <StyledListItem>\n        {' '}\n        <span style={{ marginRight: '15px', fontSize: '16px' }}>Version: </span>\n        {state.selectedResource.version}{' '}\n      </StyledListItem>\n      <StyledListItem>\n        {' '}\n        <span style={{ marginRight: '15px', fontSize: '16px' }}>\n          EndPoints:\n        </span>\n        <a>\n          {`/${state.selectedResource.version}/${state.selectedResource.name}`}{' '}\n        </a>{' '}\n      </StyledListItem>\n      <StyledListItem>\n        {' '}\n        <span style={{ marginRight: '15px', fontSize: '16px' }}>\n          Created On:{' '}\n        </span>\n        {state.selectedResource.created}{' '}\n      </StyledListItem>\n      <StyledListItem>\n        {' '}\n        <span style={{ marginRight: '15px', fontSize: '16px' }}>\n          Last Modified On:\n        </span>\n        {getPrintableDate(state.selectedResource.created)}{' '}\n      </StyledListItem>\n    </div>\n  )\n\n  return (\n    <div>\n      <h4 style={{ marginLeft: '4px' }}>Reference</h4>\n      <div style={{ marginTop: '13px', width: '345px' }}>{details}</div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Row } from 'react-bootstrap'\nimport ResourceList from './ResourceList'\nimport ResourceManagementEditor from './ResourceManagementEditor'\nimport Reference from './Reference'\n\nexport default function ResourceManagement() {\n  return (\n    <div style={{ marginTop: '3%' }}>\n      <Row className=\"mr-0\">\n        <div className=\"col-md-3 mt-3 \">\n          <ResourceList />\n        </div>\n        <div className=\"col-md-6 mt-2 pl-0\">\n          <ResourceManagementEditor />\n        </div>\n        <div className=\"col-md-3 mt-3 pl-0\">\n          <Reference />\n        </div>\n      </Row>\n    </div>\n  )\n}\n","import { createNewResource, fetchXML } from 'api/apis'\r\nimport XMLEditor from 'components/XMLEditor'\r\nimport XMLEditor2 from 'components/XMLEditor2'\r\nimport { API_URL_DOMAIN, newResourceDefaultVal } from 'constants/resource'\r\nimport React, { createRef, useEffect, useState } from 'react'\r\nimport { Breadcrumb, Form, Modal, Row } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { getParams } from 'utils/queryParams'\r\nimport { saveResourceXML } from 'api/apis'\r\nimport { useLoadingContext } from 'providers/LoadingContext'\r\nimport { useErrorModalContext } from 'providers/ErrorModalContext'\r\n\r\nconst newResourceTitle = 'New Resource'\r\n\r\nconst initialResource = {\r\n  name: newResourceTitle,\r\n  version: '1.0',\r\n  isNewResource: true,\r\n}\r\n\r\nfunction ResourceEditor(props) {\r\n  const cmRef = createRef()\r\n\r\n  const [loading, setLoading] = useLoadingContext()\r\n  const [error, setError] = useErrorModalContext()\r\n\r\n  const [connectionError, setConnectionError] = useState(false)\r\n  const [darkTheme, setDarkTheme] = useState(false)\r\n  const [isNew, setIsNew] = useState(false)\r\n  const [savedValue, setSavedValue] = useState('')\r\n  const [value, setValue] = useState(newResourceDefaultVal)\r\n  const [documentModified, setDocumentModified] = useState(false)\r\n  const [nameModalOpen, setNameModalOpen] = useState(false)\r\n  const [saving, setSaving] = useState(false)\r\n  const [resNameError, setResNameError] = useState(false)\r\n  const [emptyWarningModal, setEmptyWarningModal] = useState(false)\r\n  // const [error, setError] = useState(false)\r\n  const [errorMessage, setErrorMessage] = useState('')\r\n  const [savedOnce, setSavedOnce] = useState(false)\r\n  const [selectedResource, setSelectedResource] = useState(initialResource)\r\n  const [newResourceName, setNewResourceName] = useState('')\r\n  const [xmlResponse, setXmlResponse] = useState('')\r\n  const [xmlUpdated, setXmlUpdated] = useState(false)\r\n\r\n  const { name, version, isNewResource } = selectedResource\r\n\r\n  const onBeforeUnload = (ev) => {\r\n    // eslint-disable-next-line no-param-reassign\r\n    ev.returnValue = 'Are you sure you want to leave this page?'\r\n  }\r\n\r\n  const openRes = () => {\r\n    const url = `${API_URL_DOMAIN}/${localStorage.defaultItem}/${version}/${name}`\r\n    window.open(url, '_blank')\r\n  }\r\n\r\n  const getModifiedTitle = (name) => {\r\n    return `${name}*`\r\n  }\r\n\r\n  const trimAsteriskFromTitle = (name) => {\r\n    return name.replace(/\\*/g, '')\r\n  }\r\n\r\n  const handleNewNameChange = (event) => setNewResourceName(event.target.value)\r\n\r\n  const onTextChange = (text) => {\r\n    if (!documentModified) {\r\n      window.addEventListener('beforeunload', onBeforeUnload)\r\n      document.title += ' *'\r\n      setDocumentModified(true)\r\n      setSelectedResource({\r\n        ...selectedResource,\r\n        name: getModifiedTitle(selectedResource.name),\r\n      })\r\n      return setValue(text)\r\n    }\r\n    return setValue(text)\r\n  }\r\n\r\n  const isSameVersion = () => {\r\n    let xmlDoc\r\n    if (window.DOMParser) {\r\n      const parser = new DOMParser()\r\n      xmlDoc = parser.parseFromString(value, 'text/xml')\r\n    } else {\r\n      // Internet Explorer\r\n      // eslint-disable-next-line no-undef\r\n      xmlDoc = new ActiveXObject('Microsoft.XMLDOM')\r\n      xmlDoc.async = false\r\n      xmlDoc.loadXML(value)\r\n    }\r\n    const versionFromXML = `v${xmlDoc\r\n      .getElementsByTagName('Resource')[0]\r\n      .getAttribute('v')}`\r\n    return versionFromXML === version\r\n  }\r\n\r\n  const saveResource = async () => {\r\n    try {\r\n      setLoading({\r\n        type: 'open',\r\n        payload: { message: `Saving Resource...` },\r\n      })\r\n      await saveResourceXML(trimAsteriskFromTitle(name), version, value)\r\n      setDocumentModified(false)\r\n      setSelectedResource({\r\n        ...selectedResource,\r\n        name: trimAsteriskFromTitle(selectedResource.name),\r\n      })\r\n      setLoading({ type: 'close' })\r\n      window.removeEventListener('beforeunload', onBeforeUnload)\r\n    } catch (error) {\r\n      setLoading({ type: 'close' })\r\n      return setError({\r\n        type: 'open',\r\n        payload: { message: error.message || 'Failed to save resource' },\r\n      })\r\n    }\r\n  }\r\n\r\n  const createResource = async () => {\r\n    if (/^[a-z]+$/.test(newResourceName)) {\r\n      setLoading({\r\n        type: 'open',\r\n        payload: { message: `Creating Resource...` },\r\n      })\r\n      try {\r\n        await createNewResource(newResourceName, value)\r\n        setLoading({ type: 'close' })\r\n        props.history.push('/resources')\r\n      } catch (error) {\r\n        setLoading({ type: 'close' })\r\n        return setError({\r\n          type: 'open',\r\n          payload: {\r\n            message: error.message || 'Failed to create resource',\r\n          },\r\n        })\r\n      }\r\n    } else {\r\n      return setError({\r\n        type: 'open',\r\n        payload: { message: 'Invalid resource name provided' },\r\n      })\r\n    }\r\n  }\r\n\r\n  const saveHandler = (e) => {\r\n    e.preventDefault()\r\n    if (value !== '') {\r\n      if (isNewResource) {\r\n        return createResource()\r\n      }\r\n      isSameVersion() ? saveResource() : createResource()\r\n    } else {\r\n      return setError({\r\n        type: 'open',\r\n        payload: { message: 'Resource XML cannot be empty' },\r\n      })\r\n    }\r\n  }\r\n\r\n  const toggleThemeAndUpdateLStorage = () => {\r\n    setDarkTheme((prevState) => {\r\n      const newState = !prevState\r\n      localStorage.darkMode = newState\r\n      return newState\r\n    })\r\n  }\r\n\r\n  const getXMLForSelectedResource = async () => {\r\n    if (!isNewResource) {\r\n      try {\r\n        setLoading({\r\n          type: 'open',\r\n          payload: { message: `Getting resource data...` },\r\n        })\r\n        const { data } = await fetchXML(name, version)\r\n        setXmlResponse(data)\r\n        setSavedValue(data)\r\n        setValue(data)\r\n        return setLoading({ type: 'close' })\r\n      } catch (error) {\r\n        setLoading({ type: 'close' })\r\n        return setError({\r\n          type: 'open',\r\n          payload: { message: 'Could not get resource data' },\r\n        })\r\n      }\r\n      // cmRef.current && cmRef.current.getCodeMirror().setValue(value)\r\n    }\r\n  }\r\n  /* const overrideSave = (e) => {\r\n    const { isNew } = getParams(props.location.search)\r\n    if (\r\n      (window.navigator.platform.match('Mac') ? e.metaKey : e.ctrlKey) &&\r\n      e.keyCode == 83\r\n    ) {\r\n      e.preventDefault()\r\n      if (isNew === 'true') {\r\n        setNameModalOpen(true)\r\n      } else {\r\n        saveResource(e)\r\n      }\r\n      // Process the event here (such as click on submit button)\r\n    }\r\n  }*/\r\n\r\n  useEffect(() => {\r\n    const { name, version, isNew } = getParams(props.location.search)\r\n    setSelectedResource({\r\n      name: isNew === 'true' ? newResourceTitle : name,\r\n      version: version,\r\n      isNewResource: isNew === 'true',\r\n    })\r\n    setDarkTheme(localStorage.darkMode)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    // getXMLForSelectedResource()\r\n    if (cmRef.current && xmlResponse !== '') {\r\n      // const cmValue = cmRef.current.getCodeMirror().getValue()\r\n      // if (cmValue !== xmlResponse) return\r\n      if (!xmlUpdated) {\r\n        cmRef.current.getCodeMirror().setValue(xmlResponse)\r\n        setXmlUpdated(true)\r\n      }\r\n    }\r\n  }, [cmRef])\r\n\r\n  useEffect(() => {\r\n    getXMLForSelectedResource()\r\n\r\n    //  window.addEventListener('keydown', overrideSave)\r\n\r\n    // cleanup this component\r\n    return () => {\r\n      window.removeEventListener('beforeunload', onBeforeUnload)\r\n      // window.removeEventListener('keydown', overrideSave)\r\n    }\r\n  }, [selectedResource.version])\r\n\r\n  useEffect(() => {\r\n    document.title = name\r\n  }, [name])\r\n\r\n  useEffect(() => {\r\n    if (value === savedValue) {\r\n      window.removeEventListener('beforeunload', onBeforeUnload)\r\n      setDocumentModified(false)\r\n      setSelectedResource({\r\n        ...selectedResource,\r\n        name: trimAsteriskFromTitle(name),\r\n      })\r\n    }\r\n  }, [value])\r\n\r\n  return (\r\n    <div className=\"container\" style={{ marginTop: '10px' }}>\r\n      <Row>\r\n        <Breadcrumb style={{ marginLeft: '15px' }}>\r\n          <Breadcrumb.Item>\r\n            <Link to=\"/resources\">resources</Link>\r\n          </Breadcrumb.Item>\r\n          <Breadcrumb.Item active>\r\n            {isNewResource ? newResourceTitle : name}\r\n          </Breadcrumb.Item>\r\n        </Breadcrumb>\r\n        <div className=\"row pt-4 ml-1\">\r\n          {connectionError ? (\r\n            <div>\r\n              <h5 className=\"text text-danger\">\r\n                Unable to connect to server. Please check your connection!\r\n              </h5>\r\n            </div>\r\n          ) : (\r\n            <div style={{ marginTop: '-1.2em' }} className=\"col-md-12\">\r\n              <div className=\"row\" style={{ marginLeft: '3px' }}>\r\n                <span\r\n                  style={{\r\n                    marginBottom: '5px',\r\n                    width: '31px',\r\n                    paddingLeft: '4px',\r\n                  }}\r\n                  title=\"Save File\"\r\n                  onClick={\r\n                    isNewResource ? () => setNameModalOpen(true) : saveHandler\r\n                  }\r\n                  className=\"btn btn-primary btn-sm\"\r\n                >\r\n                  <i\r\n                    style={{\r\n                      marginTop: '6px',\r\n                    }}\r\n                    className=\"fa fa-floppy-o fa-fw fa-lg\"\r\n                  />\r\n                </span>\r\n                {!isNewResource && (\r\n                  <span\r\n                    title=\"Open resource in browser\"\r\n                    onClick={openRes}\r\n                    style={{\r\n                      // height: '29px',\r\n                      cursor: 'pointer',\r\n                      marginBottom: '5px',\r\n                      marginLeft: '5px',\r\n                      width: '31px',\r\n                    }}\r\n                    className=\"btn btn-primary btn-sm\"\r\n                  >\r\n                    <i\r\n                      className=\"fa fa-lg fa-location-arrow fa-inverse\"\r\n                      style={{\r\n                        marginTop: '7px',\r\n                      }}\r\n                    />\r\n                  </span>\r\n                )}\r\n                <span\r\n                  title=\"Theme\"\r\n                  style={{\r\n                    cursor: 'pointer',\r\n                    marginLeft: '5px',\r\n                    marginBottom: '5px',\r\n                    width: '31px',\r\n                    paddingLeft: '9px',\r\n                  }}\r\n                  onClick={toggleThemeAndUpdateLStorage}\r\n                  className=\"btn btn-primary\"\r\n                >\r\n                  {darkTheme ? (\r\n                    <i className=\"fa fa-lg fa-moon-o\" />\r\n                  ) : (\r\n                    <i className=\"fa fa-lg fa-lightbulb-o\" />\r\n                  )}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          )}\r\n          <Modal\r\n            show={nameModalOpen}\r\n            contentLabel=\"resource-name-modal\"\r\n            onHide={() => setNameModalOpen(false)}\r\n          >\r\n            <Modal.Header closeButton>\r\n              <h4 className=\"modal-title\">Enter resource name</h4>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"resourceName\"\r\n                // onKeyPress={handleSaveKeyPress}\r\n                onChange={handleNewNameChange}\r\n                autoFocus\r\n                required\r\n              />\r\n              {resNameError ? (\r\n                <p className=\"text text-danger\">\r\n                  Spaces/special characters/capital letters/numbers not allowed!\r\n                </p>\r\n              ) : null}\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-primary pull-right\"\r\n                onClick={saveHandler}\r\n              >\r\n                Save\r\n              </button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n\r\n          <Modal\r\n            contentLabel=\"empty-warning-modal\"\r\n            show={emptyWarningModal}\r\n            className=\"col-md-4\"\r\n          >\r\n            <div className=\"modal-header\">\r\n              <h4>Warning</h4>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <p>Please enter valid xml text!</p>\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-warning\"\r\n                onClick={() => setEmptyWarningModal(false)}\r\n              >\r\n                OK\r\n              </button>\r\n            </div>\r\n          </Modal>\r\n\r\n          <Modal\r\n            contentLabel=\"resource-saving-modal\"\r\n            // onRequestClose={resetState}\r\n            show={saving}\r\n            className=\"col-md-4\"\r\n          >\r\n            <div className=\"modal-body\">\r\n              {isNew ? (\r\n                savedOnce ? (\r\n                  <h4>\r\n                    Saving resource...\r\n                    <span\r\n                      style={{ color: '#34495e' }}\r\n                      className=\"fa fa-circle-o-notch fa-spin pull-right\"\r\n                    />\r\n                  </h4>\r\n                ) : (\r\n                  <h4>\r\n                    Creating resource...\r\n                    <span\r\n                      style={{ color: '#34495e' }}\r\n                      className=\"fa fa-circle-o-notch fa-spin pull-right\"\r\n                    />\r\n                  </h4>\r\n                )\r\n              ) : (\r\n                <h4>\r\n                  Saving resource...\r\n                  <span\r\n                    style={{ color: '#34495e' }}\r\n                    className=\"fa fa-circle-o-notch fa-spin pull-right\"\r\n                  />\r\n                </h4>\r\n              )}\r\n            </div>\r\n          </Modal>\r\n        </div>\r\n      </Row>\r\n      <div className=\"XMLInput\">\r\n        <XMLEditor\r\n          ref={cmRef}\r\n          documentModified={documentModified}\r\n          onTextChange={onTextChange}\r\n          value={value}\r\n          darkTheme={darkTheme}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ResourceEditor\r\n","export default __webpack_public_path__ + \"static/media/api-docs-bg.7373cfaf.svg\";","import React, { Component } from 'react'\r\nimport DocIcon from \"assets/images/api-docs/api-docs-bg.svg\";\r\nimport { RedocStandalone } from 'redoc'\r\nimport { API_URL } from 'constants/resource.js'\r\n\r\nclass APIDocs extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      spec: null,\r\n    }\r\n\r\n    this.getSpec = () => {\r\n      const app = this.props.match.params.app\r\n      // const app = this.getParameterByName('app')\r\n      // console.log(API_URL + '/m/v1.0/openapi/'+app);\r\n      fetch(`${API_URL}/m/v1.0/openapi/${app}`, {\r\n        method: 'GET',\r\n        headers: {\r\n          Authorization: localStorage.token,\r\n        },\r\n      })\r\n        .then((res) => res.json())\r\n        .then((response) => {\r\n          const spec = JSON.parse(response.spec)\r\n          // console.log(spec)\r\n          this.setState({ spec })\r\n        })\r\n        .catch((err) => {\r\n          // console.log(err);\r\n        })\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getSpec()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"text-center\">\r\n        {this.state.spec == null ? <img style={{height:'570px'}} src={DocIcon} alt=\"API Docs\"/>\r\n          : <RedocStandalone spec={this.state.spec} /> }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default APIDocs\r\n","export async function userLoggedIn() {\n  const status = await localStorage.getItem('token')\n  return !!status\n}\n\nexport function encodePasswordBase64(password) {\n  return btoa(password)\n}\n","import React, { useEffect, useState } from 'react'\nimport { Button, Container, Form } from 'react-bootstrap'\nimport { useErrorModalContext } from 'providers/ErrorModalContext.jsx'\nimport { useLoadingContext } from 'providers/LoadingContext.jsx'\nimport { encodePasswordBase64, userLoggedIn } from 'utils/auth.js'\nimport { doLogin } from 'api/apis'\n\nconst defaultInputState = {\n  username: '',\n  password: '',\n}\n\nfunction LoginView(props) {\n  const [error, setError] = useErrorModalContext()\n  const [loading, setLoading] = useLoadingContext()\n\n  const [inputState, setInputState] = useState(defaultInputState)\n\n  const { username, password } = inputState\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    try {\n      setLoading({\n        type: 'open',\n        payload: { message: `Signing In...` },\n      })\n      const { data } = await doLogin(username, encodePasswordBase64(password))\n      await localStorage.setItem('token', data.token)\n      localStorage.setItem('defaultItem', data.active_id)\n      props.history.push('/resources')\n      setLoading({ type: 'close' })\n    } catch (error) {\n      setLoading({ type: 'close' })\n      setError({\n        type: 'open',\n        payload: { message: error.message || 'Failed to sign in' },\n      })\n    }\n  }\n\n  const handleChange = (e) => {\n    e.preventDefault()\n    setInputState({\n      ...inputState,\n      [e.target.name]: e.target.value,\n    })\n  }\n\n  useEffect(async () => {\n    const isLoggedIn = await userLoggedIn()\n    if (isLoggedIn) {\n      props.history.push('/resources')\n    } else {\n      localStorage.clear()\n    }\n  }, [])\n\n  return (\n    <Container className=\"pt-4\">\n      {/*<h4>Login</h4>*/}\n      {/*<br />*/}\n      <Form\n        className=\"col-md-4 col-md-offset-4 mx-auto mt-auto\"\n        onSubmit={handleSubmit}\n      >\n        <Form.Group>\n          <Form.Label>Username</Form.Label>\n          <Form.Control\n            type=\"text\"\n            name=\"username\"\n            value={username}\n            onChange={handleChange}\n            placeholder=\"Username\"\n            required\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            placeholder=\"Password\"\n            onChange={handleChange}\n            required\n          />\n          {/* <a href=\"#/forgot-password\" style={{cursor:\"pointer\",fontWeight:\"bold\"}}>Forgot password?</a>\n           */}\n        </Form.Group>\n        <Button type=\"submit\" variant=\"success\">\n          Login\n        </Button>\n        <br />\n        {error && !loading && (\n          <p className=\"text text-danger\">Invalid email/password</p>\n        )}\n      </Form>\n    </Container>\n  )\n}\n\nexport default LoginView\n","import ErrorModalProvider from 'providers/ErrorModalContext'\nimport React, { createContext, useContext, useEffect, useState } from 'react'\nimport LoadingProvider from 'providers/LoadingContext'\nimport { userLoggedIn } from 'utils/auth'\nimport SaveChangesModalProvider from 'providers/SaveChangesModalContext'\nimport ResourceProvider from './ResourceContext'\n\nconst GlobalContext = createContext()\n\nconst defaultAuthState = {\n  token: '',\n  isLoggedIn: false,\n}\n\nexport default function GlobalProvider(props) {\n  const [authState, setAuthState] = useState(defaultAuthState)\n\n  const updateAuthState = () => {\n    const loggedIn = userLoggedIn()\n    if (loggedIn) {\n      setAuthState({\n        token: localStorage.getItem('token'),\n        isLoggedIn: true,\n      })\n    } else {\n      window.location.href = '/login'\n    }\n  }\n\n  useEffect(() => {\n    updateAuthState()\n  }, [])\n\n  return (\n    <GlobalContext.Provider\n      value={{\n        globalState: {\n          token: authState.token,\n          isLoggedIn: authState.isLoggedIn,\n        },\n        globalHandlers: {\n          updateAuthState,\n        },\n      }}\n    >\n      <ResourceProvider>\n        <ErrorModalProvider>\n          <SaveChangesModalProvider>\n            <LoadingProvider>{props.children}</LoadingProvider>\n          </SaveChangesModalProvider>\n        </ErrorModalProvider>\n      </ResourceProvider>\n    </GlobalContext.Provider>\n  )\n}\n\nfunction useGlobalContext() {\n  const context = useContext(GlobalContext)\n  if (context === undefined) {\n    throw new Error('useCountDispatch must be used within a CountProvider')\n  }\n  return [context.globalState, context.globalHandlers]\n}\n\nexport { GlobalContext, useGlobalContext }\n","import NavigationBar from 'app/NavigationBar'\nimport Resources from 'features/resources/Resources'\nimport ResourceManagement from 'features/resource-management/ResourceManagementContainer'\nimport ResourceEditor from 'features/xml-editor/ResourceEditor'\nimport ErrorModalProvider from 'providers/ErrorModalContext'\nimport SaveChangesModalProvider from 'providers/SaveChangesModalContext'\nimport LoadingProvider from 'providers/LoadingContext'\nimport React, { useEffect } from 'react'\nimport Switch from 'react-bootstrap/esm/Switch'\nimport { Redirect, Route } from 'react-router-dom'\nimport APIDocs from 'features/docs/Redoc.jsx'\nimport LoginView from 'features/auth/LoginView.jsx'\nimport ResourceProvider from '../providers/ResourceContext.jsx'\nimport { useGlobalContext } from '../providers/GlobalContext'\n\nconst AuthenticatedRoute = (props) => {\n  const { component: Component, auth, ...rest } = props\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        auth === true ? <Component {...props} /> : <Redirect to=\"/login\" />\n      }\n    />\n  )\n}\n\nconst RedirectToResources = () => <Redirect to=\"/resources\" />\n\nconst LogOut = () => {\n  useEffect(() => {\n    localStorage.clear()\n  }, [])\n  return <Redirect to=\"/login\" />\n}\n\nfunction App(props) {\n  const [globalState] = useGlobalContext()\n  const { isLoggedIn } = globalState\n  return (\n    <div className=\"App\">\n      <LoadingProvider>\n        <SaveChangesModalProvider>\n          <ErrorModalProvider>\n            <ResourceProvider>\n              <NavigationBar />\n              <Switch>\n                {/*{!loggedIn && <Redirect exact to=\"/login\" />}*/}\n                <Route exact path=\"/\" component={RedirectToResources} />\n                <Route exact path=\"/login\" component={LoginView} />\n                <AuthenticatedRoute\n                  exact\n                  path=\"/logout\"\n                  auth={isLoggedIn}\n                  component={LogOut}\n                />\n                <AuthenticatedRoute\n                  exact\n                  path=\"/resources\"\n                  auth={isLoggedIn}\n                  component={Resources}\n                />\n                <AuthenticatedRoute\n                  exact\n                  path=\"/editor\"\n                  auth={isLoggedIn}\n                  component={ResourceEditor}\n                />\n                <AuthenticatedRoute\n                  exact\n                  path=\"/docs/:app\"\n                  component={APIDocs}\n                />\n                <Route\n                  exact\n                  path=\"/resource-manager\"\n                  auth={isLoggedIn}\n                  component={ResourceManagement}\n                />\n              </Switch>\n            </ResourceProvider>\n          </ErrorModalProvider>\n        </SaveChangesModalProvider>\n      </LoadingProvider>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'assets/vendor/css/bootstrap.min.css'\nimport 'assets/vendor/css/font-awesome.min.css'\nimport './index.css'\nimport App from './app/App'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport GlobalProvider from './providers/GlobalContext'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <GlobalProvider>\n        <App />\n      </GlobalProvider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}